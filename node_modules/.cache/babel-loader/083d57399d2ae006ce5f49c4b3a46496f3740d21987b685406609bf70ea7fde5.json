{"ast":null,"code":"// Technology keywords mapped to standard skill names\nconst technologyKeywords = {\n  // Frontend Technologies\n  'react': 'React',\n  'reactjs': 'React',\n  'react.js': 'React',\n  'angular': 'Angular',\n  'angularjs': 'Angular',\n  'vue': 'Vue.js',\n  'vuejs': 'Vue.js',\n  'vue.js': 'Vue.js',\n  'javascript': 'JavaScript',\n  'js': 'JavaScript',\n  'typescript': 'TypeScript',\n  'ts': 'TypeScript',\n  'html': 'HTML5',\n  'html5': 'HTML5',\n  'css': 'CSS3',\n  'css3': 'CSS3',\n  'sass': 'SASS',\n  'scss': 'SCSS',\n  'less': 'LESS',\n  'bootstrap': 'Bootstrap',\n  'tailwind': 'Tailwind CSS',\n  'material': 'Material UI',\n  'mui': 'Material UI',\n  'next': 'Next.js',\n  'nextjs': 'Next.js',\n  'next.js': 'Next.js',\n  'gatsby': 'Gatsby',\n  'svelte': 'Svelte',\n  'jquery': 'jQuery',\n  'redux': 'Redux',\n  'webpack': 'Webpack',\n  'vite': 'Vite',\n  // Backend Technologies\n  'node': 'Node.js',\n  'nodejs': 'Node.js',\n  'node.js': 'Node.js',\n  'express': 'Express.js',\n  'expressjs': 'Express.js',\n  'nestjs': 'NestJS',\n  'python': 'Python',\n  'django': 'Django',\n  'flask': 'Flask',\n  'fastapi': 'FastAPI',\n  'java': 'Java',\n  'spring': 'Spring Boot',\n  'springboot': 'Spring Boot',\n  'php': 'PHP',\n  'laravel': 'Laravel',\n  'symfony': 'Symfony',\n  'ruby': 'Ruby',\n  'rails': 'Ruby on Rails',\n  'go': 'Go',\n  'golang': 'Go',\n  'rust': 'Rust',\n  'c#': 'C#',\n  'csharp': 'C#',\n  '.net': '.NET',\n  'dotnet': '.NET',\n  'asp.net': 'ASP.NET',\n  // Databases\n  'mysql': 'MySQL',\n  'postgresql': 'PostgreSQL',\n  'postgres': 'PostgreSQL',\n  'mongodb': 'MongoDB',\n  'mongo': 'MongoDB',\n  'redis': 'Redis',\n  'cassandra': 'Cassandra',\n  'oracle': 'Oracle Database',\n  'sql': 'SQL',\n  'nosql': 'NoSQL',\n  'sqlite': 'SQLite',\n  'mariadb': 'MariaDB',\n  'dynamodb': 'DynamoDB',\n  'firebase': 'Firebase',\n  'firestore': 'Firestore',\n  'elasticsearch': 'Elasticsearch',\n  'neo4j': 'Neo4j',\n  // Cloud & DevOps\n  'aws': 'AWS',\n  'amazon': 'AWS',\n  'azure': 'Microsoft Azure',\n  'gcp': 'Google Cloud Platform',\n  'google cloud': 'Google Cloud Platform',\n  'docker': 'Docker',\n  'kubernetes': 'Kubernetes',\n  'k8s': 'Kubernetes',\n  'jenkins': 'Jenkins',\n  'gitlab': 'GitLab CI/CD',\n  'github actions': 'GitHub Actions',\n  'circleci': 'CircleCI',\n  'terraform': 'Terraform',\n  'ansible': 'Ansible',\n  'chef': 'Chef',\n  'puppet': 'Puppet',\n  'vagrant': 'Vagrant',\n  'nginx': 'Nginx',\n  'apache': 'Apache',\n  'heroku': 'Heroku',\n  'digitalocean': 'DigitalOcean',\n  'lambda': 'AWS Lambda',\n  'ec2': 'AWS EC2',\n  's3': 'AWS S3',\n  'cloudformation': 'CloudFormation',\n  // Mobile Development\n  'android': 'Android Development',\n  'ios': 'iOS Development',\n  'swift': 'Swift',\n  'kotlin': 'Kotlin',\n  'react native': 'React Native',\n  'flutter': 'Flutter',\n  'dart': 'Dart',\n  'xamarin': 'Xamarin',\n  'ionic': 'Ionic',\n  // Data Science & AI/ML\n  'machine learning': 'Machine Learning',\n  'ml': 'Machine Learning',\n  'deep learning': 'Deep Learning',\n  'ai': 'Artificial Intelligence',\n  'artificial intelligence': 'Artificial Intelligence',\n  'tensorflow': 'TensorFlow',\n  'pytorch': 'PyTorch',\n  'keras': 'Keras',\n  'scikit': 'Scikit-learn',\n  'sklearn': 'Scikit-learn',\n  'pandas': 'Pandas',\n  'numpy': 'NumPy',\n  'matplotlib': 'Matplotlib',\n  'seaborn': 'Seaborn',\n  'opencv': 'OpenCV',\n  'nlp': 'Natural Language Processing',\n  'computer vision': 'Computer Vision',\n  'data science': 'Data Science',\n  'data analysis': 'Data Analysis',\n  'tableau': 'Tableau',\n  'powerbi': 'Power BI',\n  'power bi': 'Power BI',\n  'jupyter': 'Jupyter Notebook',\n  // Testing\n  'jest': 'Jest',\n  'mocha': 'Mocha',\n  'chai': 'Chai',\n  'cypress': 'Cypress',\n  'selenium': 'Selenium',\n  'pytest': 'PyTest',\n  'junit': 'JUnit',\n  'testng': 'TestNG',\n  'karma': 'Karma',\n  'jasmine': 'Jasmine',\n  // Version Control & Collaboration\n  'git': 'Git',\n  'github': 'GitHub',\n  'gitlab': 'GitLab',\n  'bitbucket': 'Bitbucket',\n  'svn': 'SVN',\n  'jira': 'JIRA',\n  'confluence': 'Confluence',\n  'slack': 'Slack',\n  'trello': 'Trello',\n  // APIs & Integration\n  'rest': 'REST API',\n  'restful': 'RESTful API',\n  'graphql': 'GraphQL',\n  'soap': 'SOAP',\n  'grpc': 'gRPC',\n  'websocket': 'WebSocket',\n  'socket.io': 'Socket.io',\n  'api': 'API Development',\n  // Security\n  'jwt': 'JWT',\n  'oauth': 'OAuth',\n  'ssl': 'SSL/TLS',\n  'encryption': 'Encryption',\n  'security': 'Application Security',\n  'penetration': 'Penetration Testing',\n  'firewall': 'Firewall Configuration',\n  // Big Data\n  'hadoop': 'Hadoop',\n  'spark': 'Apache Spark',\n  'kafka': 'Apache Kafka',\n  'airflow': 'Apache Airflow',\n  'hive': 'Apache Hive',\n  'pig': 'Apache Pig',\n  // Blockchain\n  'blockchain': 'Blockchain',\n  'ethereum': 'Ethereum',\n  'solidity': 'Solidity',\n  'web3': 'Web3',\n  'smart contract': 'Smart Contracts',\n  // Other Technologies\n  'agile': 'Agile Methodologies',\n  'scrum': 'Scrum',\n  'kanban': 'Kanban',\n  'ci/cd': 'CI/CD',\n  'microservices': 'Microservices Architecture',\n  'serverless': 'Serverless Architecture',\n  'soa': 'Service-Oriented Architecture',\n  'mvc': 'MVC Pattern',\n  'design patterns': 'Design Patterns',\n  'oop': 'Object-Oriented Programming',\n  'functional programming': 'Functional Programming',\n  'tdd': 'Test-Driven Development',\n  'bdd': 'Behavior-Driven Development'\n};\n\n// Role-based skill mappings\nconst roleSkillMappings = {\n  'software engineer': ['JavaScript', 'Git', 'REST API', 'Agile Methodologies', 'Problem Solving'],\n  'senior software engineer': ['System Design', 'Architecture', 'Code Review', 'Mentoring', 'Technical Leadership'],\n  'full stack developer': ['JavaScript', 'Node.js', 'React', 'Database Design', 'REST API'],\n  'frontend developer': ['JavaScript', 'React', 'HTML5', 'CSS3', 'Responsive Design', 'UI/UX'],\n  'backend developer': ['Node.js', 'Database Design', 'REST API', 'Microservices', 'System Design'],\n  'cloud engineer': ['AWS', 'Docker', 'Kubernetes', 'Terraform', 'CI/CD', 'Linux'],\n  'devops engineer': ['Docker', 'Kubernetes', 'Jenkins', 'CI/CD', 'AWS', 'Terraform', 'Monitoring'],\n  'data scientist': ['Python', 'Machine Learning', 'Data Analysis', 'SQL', 'Statistics', 'Pandas'],\n  'data engineer': ['Python', 'SQL', 'ETL', 'Big Data', 'Apache Spark', 'Data Warehousing'],\n  'data analyst': ['SQL', 'Excel', 'Tableau', 'Data Visualization', 'Statistical Analysis'],\n  'machine learning engineer': ['Python', 'TensorFlow', 'PyTorch', 'Machine Learning', 'Deep Learning'],\n  'mobile developer': ['Mobile Development', 'REST API', 'Git', 'Agile'],\n  'android developer': ['Android Development', 'Kotlin', 'Java', 'Material Design', 'REST API'],\n  'ios developer': ['iOS Development', 'Swift', 'Xcode', 'REST API', 'SwiftUI'],\n  'ui/ux designer': ['Figma', 'Sketch', 'Adobe XD', 'Prototyping', 'User Research', 'Wireframing'],\n  'product manager': ['Product Strategy', 'Roadmap Planning', 'Agile', 'Data Analysis', 'Stakeholder Management'],\n  'project manager': ['Project Management', 'Agile', 'Scrum', 'Risk Management', 'Stakeholder Communication'],\n  'qa engineer': ['Testing', 'Selenium', 'Test Automation', 'Bug Tracking', 'Quality Assurance'],\n  'security engineer': ['Security', 'Penetration Testing', 'Encryption', 'Firewall', 'Compliance'],\n  'business analyst': ['Requirements Analysis', 'Process Mapping', 'SQL', 'Data Analysis', 'Documentation']\n};\n\n// Extract skills from text\nexport const extractSkillsFromText = text => {\n  if (!text) return new Set();\n  const lowerText = text.toLowerCase();\n  const foundSkills = new Set();\n\n  // Check for each technology keyword\n  Object.entries(technologyKeywords).forEach(([keyword, skillName]) => {\n    // Use word boundaries to avoid partial matches\n    const regex = new RegExp(`\\\\b${keyword}\\\\b`, 'i');\n    if (regex.test(lowerText)) {\n      foundSkills.add(skillName);\n    }\n  });\n  return foundSkills;\n};\n\n// Get skills based on role\nexport const getSkillsForRole = role => {\n  if (!role) return new Set();\n  const lowerRole = role.toLowerCase();\n  const skills = new Set();\n\n  // Direct match\n  if (roleSkillMappings[lowerRole]) {\n    roleSkillMappings[lowerRole].forEach(skill => skills.add(skill));\n    return skills;\n  }\n\n  // Fuzzy match\n  for (const [roleKey, roleSkills] of Object.entries(roleSkillMappings)) {\n    if (lowerRole.includes(roleKey) || roleKey.includes(lowerRole)) {\n      roleSkills.forEach(skill => skills.add(skill));\n      break;\n    }\n  }\n  return skills;\n};\n\n// Extract skills from degree\nexport const extractSkillsFromDegree = degree => {\n  if (!degree) return new Set();\n  const skills = new Set();\n  const lowerDegree = degree.toLowerCase();\n  if (lowerDegree.includes('computer science') || lowerDegree.includes('computer engineering')) {\n    skills.add('Data Structures');\n    skills.add('Algorithms');\n    skills.add('Object-Oriented Programming');\n    skills.add('Database Management');\n    skills.add('Software Engineering');\n  }\n  if (lowerDegree.includes('data science') || lowerDegree.includes('analytics')) {\n    skills.add('Data Analysis');\n    skills.add('Statistics');\n    skills.add('Machine Learning');\n    skills.add('Python');\n    skills.add('SQL');\n  }\n  if (lowerDegree.includes('information technology') || lowerDegree.includes('it')) {\n    skills.add('Networking');\n    skills.add('System Administration');\n    skills.add('Database Management');\n    skills.add('IT Support');\n  }\n  if (lowerDegree.includes('artificial intelligence') || lowerDegree.includes('ai')) {\n    skills.add('Artificial Intelligence');\n    skills.add('Machine Learning');\n    skills.add('Deep Learning');\n    skills.add('Neural Networks');\n    skills.add('Python');\n  }\n  if (lowerDegree.includes('software engineering')) {\n    skills.add('Software Development');\n    skills.add('System Design');\n    skills.add('Agile Methodologies');\n    skills.add('Design Patterns');\n  }\n  if (lowerDegree.includes('cybersecurity') || lowerDegree.includes('security')) {\n    skills.add('Cybersecurity');\n    skills.add('Network Security');\n    skills.add('Encryption');\n    skills.add('Ethical Hacking');\n  }\n  if (lowerDegree.includes('cloud computing')) {\n    skills.add('Cloud Architecture');\n    skills.add('AWS');\n    skills.add('Virtualization');\n    skills.add('DevOps');\n  }\n  if (lowerDegree.includes('business') || lowerDegree.includes('mba')) {\n    skills.add('Business Analysis');\n    skills.add('Strategic Planning');\n    skills.add('Project Management');\n    skills.add('Leadership');\n  }\n  return skills;\n};\n\n// Generate comprehensive technical skills from all sources\nexport const generateTechnicalSkills = formData => {\n  const allSkills = new Set();\n\n  // Extract from work experience\n  if (formData.experience) {\n    formData.experience.forEach(exp => {\n      // From role\n      const roleSkills = getSkillsForRole(exp.role);\n      roleSkills.forEach(skill => allSkills.add(skill));\n\n      // From company name (some companies imply certain tech stacks)\n      if (exp.company) {\n        const companySkills = extractSkillsFromText(exp.company);\n        companySkills.forEach(skill => allSkills.add(skill));\n      }\n\n      // From description\n      if (exp.description) {\n        const descSkills = extractSkillsFromText(exp.description);\n        descSkills.forEach(skill => allSkills.add(skill));\n      }\n    });\n  }\n\n  // Extract from current/target role\n  if (formData.currentRole) {\n    const currentRoleSkills = getSkillsForRole(formData.currentRole);\n    currentRoleSkills.forEach(skill => allSkills.add(skill));\n    const roleTextSkills = extractSkillsFromText(formData.currentRole);\n    roleTextSkills.forEach(skill => allSkills.add(skill));\n  }\n  if (formData.targetRole) {\n    const targetRoleSkills = getSkillsForRole(formData.targetRole);\n    targetRoleSkills.forEach(skill => allSkills.add(skill));\n    const roleTextSkills = extractSkillsFromText(formData.targetRole);\n    roleTextSkills.forEach(skill => allSkills.add(skill));\n  }\n\n  // Extract from education\n  if (formData.education) {\n    formData.education.forEach(edu => {\n      if (edu.degree) {\n        const degreeSkills = extractSkillsFromDegree(edu.degree);\n        degreeSkills.forEach(skill => allSkills.add(skill));\n        const textSkills = extractSkillsFromText(edu.degree);\n        textSkills.forEach(skill => allSkills.add(skill));\n      }\n    });\n  }\n\n  // Extract from projects\n  if (formData.projects) {\n    formData.projects.forEach(proj => {\n      if (proj.technologies) {\n        const techSkills = extractSkillsFromText(proj.technologies);\n        techSkills.forEach(skill => allSkills.add(skill));\n      }\n      if (proj.name) {\n        const nameSkills = extractSkillsFromText(proj.name);\n        nameSkills.forEach(skill => allSkills.add(skill));\n      }\n      if (proj.description) {\n        const descSkills = extractSkillsFromText(proj.description);\n        descSkills.forEach(skill => allSkills.add(skill));\n      }\n    });\n  }\n\n  // Convert Set to comma-separated string\n  return Array.from(allSkills).sort().join(', ');\n};\n\n// Generate soft skills based on role and experience\nexport const generateSoftSkills = formData => {\n  const softSkills = new Set();\n\n  // Base soft skills for everyone\n  softSkills.add('Problem Solving');\n  softSkills.add('Communication');\n  softSkills.add('Team Collaboration');\n\n  // Role-based soft skills\n  const role = (formData.currentRole || formData.targetRole || '').toLowerCase();\n  if (role.includes('senior') || role.includes('lead') || role.includes('manager')) {\n    softSkills.add('Leadership');\n    softSkills.add('Mentoring');\n    softSkills.add('Strategic Thinking');\n    softSkills.add('Decision Making');\n  }\n  if (role.includes('manager')) {\n    softSkills.add('Project Management');\n    softSkills.add('Stakeholder Management');\n    softSkills.add('Time Management');\n  }\n  if (role.includes('designer')) {\n    softSkills.add('Creativity');\n    softSkills.add('Attention to Detail');\n    softSkills.add('User Empathy');\n  }\n  if (role.includes('analyst')) {\n    softSkills.add('Critical Thinking');\n    softSkills.add('Analytical Skills');\n    softSkills.add('Attention to Detail');\n  }\n  if (role.includes('developer') || role.includes('engineer')) {\n    softSkills.add('Debugging');\n    softSkills.add('Code Review');\n    softSkills.add('Continuous Learning');\n  }\n\n  // Experience-based skills\n  if (formData.yearsExperience) {\n    const years = parseInt(formData.yearsExperience);\n    if (years >= 5) {\n      softSkills.add('Technical Leadership');\n    }\n    if (years >= 3) {\n      softSkills.add('Mentoring');\n    }\n  }\n\n  // Additional common soft skills\n  softSkills.add('Adaptability');\n  softSkills.add('Time Management');\n  return Array.from(softSkills).sort().join(', ');\n};","map":{"version":3,"names":["technologyKeywords","roleSkillMappings","extractSkillsFromText","text","Set","lowerText","toLowerCase","foundSkills","Object","entries","forEach","keyword","skillName","regex","RegExp","test","add","getSkillsForRole","role","lowerRole","skills","skill","roleKey","roleSkills","includes","extractSkillsFromDegree","degree","lowerDegree","generateTechnicalSkills","formData","allSkills","experience","exp","company","companySkills","description","descSkills","currentRole","currentRoleSkills","roleTextSkills","targetRole","targetRoleSkills","education","edu","degreeSkills","textSkills","projects","proj","technologies","techSkills","name","nameSkills","Array","from","sort","join","generateSoftSkills","softSkills","yearsExperience","years","parseInt"],"sources":["C:/Users/khanm/Desktop/Ai Resume Builder/src/utils/skillExtractor.js"],"sourcesContent":["// Technology keywords mapped to standard skill names\r\nconst technologyKeywords = {\r\n  // Frontend Technologies\r\n  'react': 'React',\r\n  'reactjs': 'React',\r\n  'react.js': 'React',\r\n  'angular': 'Angular',\r\n  'angularjs': 'Angular',\r\n  'vue': 'Vue.js',\r\n  'vuejs': 'Vue.js',\r\n  'vue.js': 'Vue.js',\r\n  'javascript': 'JavaScript',\r\n  'js': 'JavaScript',\r\n  'typescript': 'TypeScript',\r\n  'ts': 'TypeScript',\r\n  'html': 'HTML5',\r\n  'html5': 'HTML5',\r\n  'css': 'CSS3',\r\n  'css3': 'CSS3',\r\n  'sass': 'SASS',\r\n  'scss': 'SCSS',\r\n  'less': 'LESS',\r\n  'bootstrap': 'Bootstrap',\r\n  'tailwind': 'Tailwind CSS',\r\n  'material': 'Material UI',\r\n  'mui': 'Material UI',\r\n  'next': 'Next.js',\r\n  'nextjs': 'Next.js',\r\n  'next.js': 'Next.js',\r\n  'gatsby': 'Gatsby',\r\n  'svelte': 'Svelte',\r\n  'jquery': 'jQuery',\r\n  'redux': 'Redux',\r\n  'webpack': 'Webpack',\r\n  'vite': 'Vite',\r\n  \r\n  // Backend Technologies\r\n  'node': 'Node.js',\r\n  'nodejs': 'Node.js',\r\n  'node.js': 'Node.js',\r\n  'express': 'Express.js',\r\n  'expressjs': 'Express.js',\r\n  'nestjs': 'NestJS',\r\n  'python': 'Python',\r\n  'django': 'Django',\r\n  'flask': 'Flask',\r\n  'fastapi': 'FastAPI',\r\n  'java': 'Java',\r\n  'spring': 'Spring Boot',\r\n  'springboot': 'Spring Boot',\r\n  'php': 'PHP',\r\n  'laravel': 'Laravel',\r\n  'symfony': 'Symfony',\r\n  'ruby': 'Ruby',\r\n  'rails': 'Ruby on Rails',\r\n  'go': 'Go',\r\n  'golang': 'Go',\r\n  'rust': 'Rust',\r\n  'c#': 'C#',\r\n  'csharp': 'C#',\r\n  '.net': '.NET',\r\n  'dotnet': '.NET',\r\n  'asp.net': 'ASP.NET',\r\n  \r\n  // Databases\r\n  'mysql': 'MySQL',\r\n  'postgresql': 'PostgreSQL',\r\n  'postgres': 'PostgreSQL',\r\n  'mongodb': 'MongoDB',\r\n  'mongo': 'MongoDB',\r\n  'redis': 'Redis',\r\n  'cassandra': 'Cassandra',\r\n  'oracle': 'Oracle Database',\r\n  'sql': 'SQL',\r\n  'nosql': 'NoSQL',\r\n  'sqlite': 'SQLite',\r\n  'mariadb': 'MariaDB',\r\n  'dynamodb': 'DynamoDB',\r\n  'firebase': 'Firebase',\r\n  'firestore': 'Firestore',\r\n  'elasticsearch': 'Elasticsearch',\r\n  'neo4j': 'Neo4j',\r\n  \r\n  // Cloud & DevOps\r\n  'aws': 'AWS',\r\n  'amazon': 'AWS',\r\n  'azure': 'Microsoft Azure',\r\n  'gcp': 'Google Cloud Platform',\r\n  'google cloud': 'Google Cloud Platform',\r\n  'docker': 'Docker',\r\n  'kubernetes': 'Kubernetes',\r\n  'k8s': 'Kubernetes',\r\n  'jenkins': 'Jenkins',\r\n  'gitlab': 'GitLab CI/CD',\r\n  'github actions': 'GitHub Actions',\r\n  'circleci': 'CircleCI',\r\n  'terraform': 'Terraform',\r\n  'ansible': 'Ansible',\r\n  'chef': 'Chef',\r\n  'puppet': 'Puppet',\r\n  'vagrant': 'Vagrant',\r\n  'nginx': 'Nginx',\r\n  'apache': 'Apache',\r\n  'heroku': 'Heroku',\r\n  'digitalocean': 'DigitalOcean',\r\n  'lambda': 'AWS Lambda',\r\n  'ec2': 'AWS EC2',\r\n  's3': 'AWS S3',\r\n  'cloudformation': 'CloudFormation',\r\n  \r\n  // Mobile Development\r\n  'android': 'Android Development',\r\n  'ios': 'iOS Development',\r\n  'swift': 'Swift',\r\n  'kotlin': 'Kotlin',\r\n  'react native': 'React Native',\r\n  'flutter': 'Flutter',\r\n  'dart': 'Dart',\r\n  'xamarin': 'Xamarin',\r\n  'ionic': 'Ionic',\r\n  \r\n  // Data Science & AI/ML\r\n  'machine learning': 'Machine Learning',\r\n  'ml': 'Machine Learning',\r\n  'deep learning': 'Deep Learning',\r\n  'ai': 'Artificial Intelligence',\r\n  'artificial intelligence': 'Artificial Intelligence',\r\n  'tensorflow': 'TensorFlow',\r\n  'pytorch': 'PyTorch',\r\n  'keras': 'Keras',\r\n  'scikit': 'Scikit-learn',\r\n  'sklearn': 'Scikit-learn',\r\n  'pandas': 'Pandas',\r\n  'numpy': 'NumPy',\r\n  'matplotlib': 'Matplotlib',\r\n  'seaborn': 'Seaborn',\r\n  'opencv': 'OpenCV',\r\n  'nlp': 'Natural Language Processing',\r\n  'computer vision': 'Computer Vision',\r\n  'data science': 'Data Science',\r\n  'data analysis': 'Data Analysis',\r\n  'tableau': 'Tableau',\r\n  'powerbi': 'Power BI',\r\n  'power bi': 'Power BI',\r\n  'jupyter': 'Jupyter Notebook',\r\n  \r\n  // Testing\r\n  'jest': 'Jest',\r\n  'mocha': 'Mocha',\r\n  'chai': 'Chai',\r\n  'cypress': 'Cypress',\r\n  'selenium': 'Selenium',\r\n  'pytest': 'PyTest',\r\n  'junit': 'JUnit',\r\n  'testng': 'TestNG',\r\n  'karma': 'Karma',\r\n  'jasmine': 'Jasmine',\r\n  \r\n  // Version Control & Collaboration\r\n  'git': 'Git',\r\n  'github': 'GitHub',\r\n  'gitlab': 'GitLab',\r\n  'bitbucket': 'Bitbucket',\r\n  'svn': 'SVN',\r\n  'jira': 'JIRA',\r\n  'confluence': 'Confluence',\r\n  'slack': 'Slack',\r\n  'trello': 'Trello',\r\n  \r\n  // APIs & Integration\r\n  'rest': 'REST API',\r\n  'restful': 'RESTful API',\r\n  'graphql': 'GraphQL',\r\n  'soap': 'SOAP',\r\n  'grpc': 'gRPC',\r\n  'websocket': 'WebSocket',\r\n  'socket.io': 'Socket.io',\r\n  'api': 'API Development',\r\n  \r\n  // Security\r\n  'jwt': 'JWT',\r\n  'oauth': 'OAuth',\r\n  'ssl': 'SSL/TLS',\r\n  'encryption': 'Encryption',\r\n  'security': 'Application Security',\r\n  'penetration': 'Penetration Testing',\r\n  'firewall': 'Firewall Configuration',\r\n  \r\n  // Big Data\r\n  'hadoop': 'Hadoop',\r\n  'spark': 'Apache Spark',\r\n  'kafka': 'Apache Kafka',\r\n  'airflow': 'Apache Airflow',\r\n  'hive': 'Apache Hive',\r\n  'pig': 'Apache Pig',\r\n  \r\n  // Blockchain\r\n  'blockchain': 'Blockchain',\r\n  'ethereum': 'Ethereum',\r\n  'solidity': 'Solidity',\r\n  'web3': 'Web3',\r\n  'smart contract': 'Smart Contracts',\r\n  \r\n  // Other Technologies\r\n  'agile': 'Agile Methodologies',\r\n  'scrum': 'Scrum',\r\n  'kanban': 'Kanban',\r\n  'ci/cd': 'CI/CD',\r\n  'microservices': 'Microservices Architecture',\r\n  'serverless': 'Serverless Architecture',\r\n  'soa': 'Service-Oriented Architecture',\r\n  'mvc': 'MVC Pattern',\r\n  'design patterns': 'Design Patterns',\r\n  'oop': 'Object-Oriented Programming',\r\n  'functional programming': 'Functional Programming',\r\n  'tdd': 'Test-Driven Development',\r\n  'bdd': 'Behavior-Driven Development'\r\n};\r\n\r\n// Role-based skill mappings\r\nconst roleSkillMappings = {\r\n  'software engineer': ['JavaScript', 'Git', 'REST API', 'Agile Methodologies', 'Problem Solving'],\r\n  'senior software engineer': ['System Design', 'Architecture', 'Code Review', 'Mentoring', 'Technical Leadership'],\r\n  'full stack developer': ['JavaScript', 'Node.js', 'React', 'Database Design', 'REST API'],\r\n  'frontend developer': ['JavaScript', 'React', 'HTML5', 'CSS3', 'Responsive Design', 'UI/UX'],\r\n  'backend developer': ['Node.js', 'Database Design', 'REST API', 'Microservices', 'System Design'],\r\n  'cloud engineer': ['AWS', 'Docker', 'Kubernetes', 'Terraform', 'CI/CD', 'Linux'],\r\n  'devops engineer': ['Docker', 'Kubernetes', 'Jenkins', 'CI/CD', 'AWS', 'Terraform', 'Monitoring'],\r\n  'data scientist': ['Python', 'Machine Learning', 'Data Analysis', 'SQL', 'Statistics', 'Pandas'],\r\n  'data engineer': ['Python', 'SQL', 'ETL', 'Big Data', 'Apache Spark', 'Data Warehousing'],\r\n  'data analyst': ['SQL', 'Excel', 'Tableau', 'Data Visualization', 'Statistical Analysis'],\r\n  'machine learning engineer': ['Python', 'TensorFlow', 'PyTorch', 'Machine Learning', 'Deep Learning'],\r\n  'mobile developer': ['Mobile Development', 'REST API', 'Git', 'Agile'],\r\n  'android developer': ['Android Development', 'Kotlin', 'Java', 'Material Design', 'REST API'],\r\n  'ios developer': ['iOS Development', 'Swift', 'Xcode', 'REST API', 'SwiftUI'],\r\n  'ui/ux designer': ['Figma', 'Sketch', 'Adobe XD', 'Prototyping', 'User Research', 'Wireframing'],\r\n  'product manager': ['Product Strategy', 'Roadmap Planning', 'Agile', 'Data Analysis', 'Stakeholder Management'],\r\n  'project manager': ['Project Management', 'Agile', 'Scrum', 'Risk Management', 'Stakeholder Communication'],\r\n  'qa engineer': ['Testing', 'Selenium', 'Test Automation', 'Bug Tracking', 'Quality Assurance'],\r\n  'security engineer': ['Security', 'Penetration Testing', 'Encryption', 'Firewall', 'Compliance'],\r\n  'business analyst': ['Requirements Analysis', 'Process Mapping', 'SQL', 'Data Analysis', 'Documentation']\r\n};\r\n\r\n// Extract skills from text\r\nexport const extractSkillsFromText = (text) => {\r\n  if (!text) return new Set();\r\n  \r\n  const lowerText = text.toLowerCase();\r\n  const foundSkills = new Set();\r\n  \r\n  // Check for each technology keyword\r\n  Object.entries(technologyKeywords).forEach(([keyword, skillName]) => {\r\n    // Use word boundaries to avoid partial matches\r\n    const regex = new RegExp(`\\\\b${keyword}\\\\b`, 'i');\r\n    if (regex.test(lowerText)) {\r\n      foundSkills.add(skillName);\r\n    }\r\n  });\r\n  \r\n  return foundSkills;\r\n};\r\n\r\n// Get skills based on role\r\nexport const getSkillsForRole = (role) => {\r\n  if (!role) return new Set();\r\n  \r\n  const lowerRole = role.toLowerCase();\r\n  const skills = new Set();\r\n  \r\n  // Direct match\r\n  if (roleSkillMappings[lowerRole]) {\r\n    roleSkillMappings[lowerRole].forEach(skill => skills.add(skill));\r\n    return skills;\r\n  }\r\n  \r\n  // Fuzzy match\r\n  for (const [roleKey, roleSkills] of Object.entries(roleSkillMappings)) {\r\n    if (lowerRole.includes(roleKey) || roleKey.includes(lowerRole)) {\r\n      roleSkills.forEach(skill => skills.add(skill));\r\n      break;\r\n    }\r\n  }\r\n  \r\n  return skills;\r\n};\r\n\r\n// Extract skills from degree\r\nexport const extractSkillsFromDegree = (degree) => {\r\n  if (!degree) return new Set();\r\n  \r\n  const skills = new Set();\r\n  const lowerDegree = degree.toLowerCase();\r\n  \r\n  if (lowerDegree.includes('computer science') || lowerDegree.includes('computer engineering')) {\r\n    skills.add('Data Structures');\r\n    skills.add('Algorithms');\r\n    skills.add('Object-Oriented Programming');\r\n    skills.add('Database Management');\r\n    skills.add('Software Engineering');\r\n  }\r\n  \r\n  if (lowerDegree.includes('data science') || lowerDegree.includes('analytics')) {\r\n    skills.add('Data Analysis');\r\n    skills.add('Statistics');\r\n    skills.add('Machine Learning');\r\n    skills.add('Python');\r\n    skills.add('SQL');\r\n  }\r\n  \r\n  if (lowerDegree.includes('information technology') || lowerDegree.includes('it')) {\r\n    skills.add('Networking');\r\n    skills.add('System Administration');\r\n    skills.add('Database Management');\r\n    skills.add('IT Support');\r\n  }\r\n  \r\n  if (lowerDegree.includes('artificial intelligence') || lowerDegree.includes('ai')) {\r\n    skills.add('Artificial Intelligence');\r\n    skills.add('Machine Learning');\r\n    skills.add('Deep Learning');\r\n    skills.add('Neural Networks');\r\n    skills.add('Python');\r\n  }\r\n  \r\n  if (lowerDegree.includes('software engineering')) {\r\n    skills.add('Software Development');\r\n    skills.add('System Design');\r\n    skills.add('Agile Methodologies');\r\n    skills.add('Design Patterns');\r\n  }\r\n  \r\n  if (lowerDegree.includes('cybersecurity') || lowerDegree.includes('security')) {\r\n    skills.add('Cybersecurity');\r\n    skills.add('Network Security');\r\n    skills.add('Encryption');\r\n    skills.add('Ethical Hacking');\r\n  }\r\n  \r\n  if (lowerDegree.includes('cloud computing')) {\r\n    skills.add('Cloud Architecture');\r\n    skills.add('AWS');\r\n    skills.add('Virtualization');\r\n    skills.add('DevOps');\r\n  }\r\n  \r\n  if (lowerDegree.includes('business') || lowerDegree.includes('mba')) {\r\n    skills.add('Business Analysis');\r\n    skills.add('Strategic Planning');\r\n    skills.add('Project Management');\r\n    skills.add('Leadership');\r\n  }\r\n  \r\n  return skills;\r\n};\r\n\r\n// Generate comprehensive technical skills from all sources\r\nexport const generateTechnicalSkills = (formData) => {\r\n  const allSkills = new Set();\r\n  \r\n  // Extract from work experience\r\n  if (formData.experience) {\r\n    formData.experience.forEach(exp => {\r\n      // From role\r\n      const roleSkills = getSkillsForRole(exp.role);\r\n      roleSkills.forEach(skill => allSkills.add(skill));\r\n      \r\n      // From company name (some companies imply certain tech stacks)\r\n      if (exp.company) {\r\n        const companySkills = extractSkillsFromText(exp.company);\r\n        companySkills.forEach(skill => allSkills.add(skill));\r\n      }\r\n      \r\n      // From description\r\n      if (exp.description) {\r\n        const descSkills = extractSkillsFromText(exp.description);\r\n        descSkills.forEach(skill => allSkills.add(skill));\r\n      }\r\n    });\r\n  }\r\n  \r\n  // Extract from current/target role\r\n  if (formData.currentRole) {\r\n    const currentRoleSkills = getSkillsForRole(formData.currentRole);\r\n    currentRoleSkills.forEach(skill => allSkills.add(skill));\r\n    \r\n    const roleTextSkills = extractSkillsFromText(formData.currentRole);\r\n    roleTextSkills.forEach(skill => allSkills.add(skill));\r\n  }\r\n  \r\n  if (formData.targetRole) {\r\n    const targetRoleSkills = getSkillsForRole(formData.targetRole);\r\n    targetRoleSkills.forEach(skill => allSkills.add(skill));\r\n    \r\n    const roleTextSkills = extractSkillsFromText(formData.targetRole);\r\n    roleTextSkills.forEach(skill => allSkills.add(skill));\r\n  }\r\n  \r\n  // Extract from education\r\n  if (formData.education) {\r\n    formData.education.forEach(edu => {\r\n      if (edu.degree) {\r\n        const degreeSkills = extractSkillsFromDegree(edu.degree);\r\n        degreeSkills.forEach(skill => allSkills.add(skill));\r\n        \r\n        const textSkills = extractSkillsFromText(edu.degree);\r\n        textSkills.forEach(skill => allSkills.add(skill));\r\n      }\r\n    });\r\n  }\r\n  \r\n  // Extract from projects\r\n  if (formData.projects) {\r\n    formData.projects.forEach(proj => {\r\n      if (proj.technologies) {\r\n        const techSkills = extractSkillsFromText(proj.technologies);\r\n        techSkills.forEach(skill => allSkills.add(skill));\r\n      }\r\n      \r\n      if (proj.name) {\r\n        const nameSkills = extractSkillsFromText(proj.name);\r\n        nameSkills.forEach(skill => allSkills.add(skill));\r\n      }\r\n      \r\n      if (proj.description) {\r\n        const descSkills = extractSkillsFromText(proj.description);\r\n        descSkills.forEach(skill => allSkills.add(skill));\r\n      }\r\n    });\r\n  }\r\n  \r\n  // Convert Set to comma-separated string\r\n  return Array.from(allSkills).sort().join(', ');\r\n};\r\n\r\n// Generate soft skills based on role and experience\r\nexport const generateSoftSkills = (formData) => {\r\n  const softSkills = new Set();\r\n  \r\n  // Base soft skills for everyone\r\n  softSkills.add('Problem Solving');\r\n  softSkills.add('Communication');\r\n  softSkills.add('Team Collaboration');\r\n  \r\n  // Role-based soft skills\r\n  const role = (formData.currentRole || formData.targetRole || '').toLowerCase();\r\n  \r\n  if (role.includes('senior') || role.includes('lead') || role.includes('manager')) {\r\n    softSkills.add('Leadership');\r\n    softSkills.add('Mentoring');\r\n    softSkills.add('Strategic Thinking');\r\n    softSkills.add('Decision Making');\r\n  }\r\n  \r\n  if (role.includes('manager')) {\r\n    softSkills.add('Project Management');\r\n    softSkills.add('Stakeholder Management');\r\n    softSkills.add('Time Management');\r\n  }\r\n  \r\n  if (role.includes('designer')) {\r\n    softSkills.add('Creativity');\r\n    softSkills.add('Attention to Detail');\r\n    softSkills.add('User Empathy');\r\n  }\r\n  \r\n  if (role.includes('analyst')) {\r\n    softSkills.add('Critical Thinking');\r\n    softSkills.add('Analytical Skills');\r\n    softSkills.add('Attention to Detail');\r\n  }\r\n  \r\n  if (role.includes('developer') || role.includes('engineer')) {\r\n    softSkills.add('Debugging');\r\n    softSkills.add('Code Review');\r\n    softSkills.add('Continuous Learning');\r\n  }\r\n  \r\n  // Experience-based skills\r\n  if (formData.yearsExperience) {\r\n    const years = parseInt(formData.yearsExperience);\r\n    if (years >= 5) {\r\n      softSkills.add('Technical Leadership');\r\n    }\r\n    if (years >= 3) {\r\n      softSkills.add('Mentoring');\r\n    }\r\n  }\r\n  \r\n  // Additional common soft skills\r\n  softSkills.add('Adaptability');\r\n  softSkills.add('Time Management');\r\n  \r\n  return Array.from(softSkills).sort().join(', ');\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}