{"ast":null,"code":"export const validateField = (name, value) => {\n  if (!value || !value.trim()) return '';\n  let error = '';\n  switch (name) {\n    case 'fullName':\n      if (value.length < 2) error = 'Name must be at least 2 characters';else if (!/^[a-zA-Z\\s.'-]+$/.test(value)) error = 'Name should only contain letters';else if (/^(test|fake|dummy|sample|xyz|abc)$/i.test(value.trim())) error = 'Please enter your real name';\n      break;\n    case 'email':\n      if (!/^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/.test(value)) {\n        error = 'Please enter a valid email address';\n      } else if (['test.com', 'fake.com', 'example.com'].includes(value.split('@')[1])) {\n        error = 'Please use a real email address';\n      }\n      break;\n    case 'phone':\n      const clean = value.replace(/[\\s\\-\\(\\)\\+]/g, '');\n      if (!/^[0-9]{10,15}$/.test(clean)) {\n        error = 'Phone must be 10-15 digits';\n      } else if (/^(\\d)\\1+$/.test(clean) || clean === '1234567890') {\n        error = 'Please enter a real phone number';\n      }\n      break;\n    case 'linkedin':\n      if (!/linkedin\\.com\\/in\\/[\\w-]{3,100}/i.test(value)) {\n        error = 'Enter valid LinkedIn URL (e.g., linkedin.com/in/username)';\n      }\n      break;\n    case 'github':\n      if (!/github\\.com\\/[\\w-]{1,39}/i.test(value)) {\n        error = 'Enter valid GitHub URL (e.g., github.com/username)';\n      }\n      break;\n    case 'portfolio':\n      if (!/^(https?:\\/\\/)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}/i.test(value)) {\n        error = 'Enter a valid website URL';\n      }\n      break;\n  }\n  return error;\n};","map":{"version":3,"names":["validateField","name","value","trim","error","length","test","includes","split","clean","replace"],"sources":["C:/Users/khanm/Desktop/Ai Resume Builder/src/utils/validator.js"],"sourcesContent":["export const validateField = (name, value) => {\r\n  if (!value || !value.trim()) return '';\r\n\r\n  let error = '';\r\n  \r\n  switch (name) {\r\n    case 'fullName':\r\n      if (value.length < 2) error = 'Name must be at least 2 characters';\r\n      else if (!/^[a-zA-Z\\s.'-]+$/.test(value)) error = 'Name should only contain letters';\r\n      else if (/^(test|fake|dummy|sample|xyz|abc)$/i.test(value.trim())) error = 'Please enter your real name';\r\n      break;\r\n    \r\n    case 'email':\r\n      if (!/^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/.test(value)) {\r\n        error = 'Please enter a valid email address';\r\n      } else if (['test.com', 'fake.com', 'example.com'].includes(value.split('@')[1])) {\r\n        error = 'Please use a real email address';\r\n      }\r\n      break;\r\n    \r\n    case 'phone':\r\n      const clean = value.replace(/[\\s\\-\\(\\)\\+]/g, '');\r\n      if (!/^[0-9]{10,15}$/.test(clean)) {\r\n        error = 'Phone must be 10-15 digits';\r\n      } else if (/^(\\d)\\1+$/.test(clean) || clean === '1234567890') {\r\n        error = 'Please enter a real phone number';\r\n      }\r\n      break;\r\n    \r\n    case 'linkedin':\r\n      if (!/linkedin\\.com\\/in\\/[\\w-]{3,100}/i.test(value)) {\r\n        error = 'Enter valid LinkedIn URL (e.g., linkedin.com/in/username)';\r\n      }\r\n      break;\r\n    \r\n    case 'github':\r\n      if (!/github\\.com\\/[\\w-]{1,39}/i.test(value)) {\r\n        error = 'Enter valid GitHub URL (e.g., github.com/username)';\r\n      }\r\n      break;\r\n    \r\n    case 'portfolio':\r\n      if (!/^(https?:\\/\\/)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}/i.test(value)) {\r\n        error = 'Enter a valid website URL';\r\n      }\r\n      break;\r\n  }\r\n  \r\n  return error;\r\n};"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAGA,CAACC,IAAI,EAAEC,KAAK,KAAK;EAC5C,IAAI,CAACA,KAAK,IAAI,CAACA,KAAK,CAACC,IAAI,CAAC,CAAC,EAAE,OAAO,EAAE;EAEtC,IAAIC,KAAK,GAAG,EAAE;EAEd,QAAQH,IAAI;IACV,KAAK,UAAU;MACb,IAAIC,KAAK,CAACG,MAAM,GAAG,CAAC,EAAED,KAAK,GAAG,oCAAoC,CAAC,KAC9D,IAAI,CAAC,kBAAkB,CAACE,IAAI,CAACJ,KAAK,CAAC,EAAEE,KAAK,GAAG,kCAAkC,CAAC,KAChF,IAAI,qCAAqC,CAACE,IAAI,CAACJ,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC,EAAEC,KAAK,GAAG,6BAA6B;MACxG;IAEF,KAAK,OAAO;MACV,IAAI,CAAC,iDAAiD,CAACE,IAAI,CAACJ,KAAK,CAAC,EAAE;QAClEE,KAAK,GAAG,oCAAoC;MAC9C,CAAC,MAAM,IAAI,CAAC,UAAU,EAAE,UAAU,EAAE,aAAa,CAAC,CAACG,QAAQ,CAACL,KAAK,CAACM,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;QAChFJ,KAAK,GAAG,iCAAiC;MAC3C;MACA;IAEF,KAAK,OAAO;MACV,MAAMK,KAAK,GAAGP,KAAK,CAACQ,OAAO,CAAC,eAAe,EAAE,EAAE,CAAC;MAChD,IAAI,CAAC,gBAAgB,CAACJ,IAAI,CAACG,KAAK,CAAC,EAAE;QACjCL,KAAK,GAAG,4BAA4B;MACtC,CAAC,MAAM,IAAI,WAAW,CAACE,IAAI,CAACG,KAAK,CAAC,IAAIA,KAAK,KAAK,YAAY,EAAE;QAC5DL,KAAK,GAAG,kCAAkC;MAC5C;MACA;IAEF,KAAK,UAAU;MACb,IAAI,CAAC,kCAAkC,CAACE,IAAI,CAACJ,KAAK,CAAC,EAAE;QACnDE,KAAK,GAAG,2DAA2D;MACrE;MACA;IAEF,KAAK,QAAQ;MACX,IAAI,CAAC,2BAA2B,CAACE,IAAI,CAACJ,KAAK,CAAC,EAAE;QAC5CE,KAAK,GAAG,oDAAoD;MAC9D;MACA;IAEF,KAAK,WAAW;MACd,IAAI,CAAC,mEAAmE,CAACE,IAAI,CAACJ,KAAK,CAAC,EAAE;QACpFE,KAAK,GAAG,2BAA2B;MACrC;MACA;EACJ;EAEA,OAAOA,KAAK;AACd,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}