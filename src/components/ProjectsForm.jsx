import React, { useEffect, useState } from 'react';
import { FileText, Wand2, Lightbulb } from 'lucide-react';
import { generateProjectDescription } from '../utils/projectSuggestions';
import { getTechSuggestionsForProject, getPrimaryTechStack } from '../utils/projectTechSuggestions';

export default function ProjectsForm({ formData, handleArrayChange, addItem, removeItem }) {
  const [techSuggestions, setTechSuggestions] = useState({});

  const autoGenerateDescription = (idx) => {
    const project = formData.projects[idx];
    if (project.name || project.technologies) {
      const description = generateProjectDescription(project.name, project.technologies);
      handleArrayChange(idx, 'description', description, 'projects');
    }
  };

  const autoSuggestTechnologies = (idx) => {
    const project = formData.projects[idx];
    if (project.name) {
      const suggestedTech = getPrimaryTechStack(project.name);
      handleArrayChange(idx, 'technologies', suggestedTech, 'projects');
    }
  };

  const handleProjectNameChange = (idx, value) => {
    handleArrayChange(idx, 'name', value, 'projects');
    
    // Get suggestions when name is typed
    if (value && value.length > 2) {
      const suggestions = getTechSuggestionsForProject(value);
      setTechSuggestions(prev => ({ ...prev, [idx]: suggestions }));
    } else {
      setTechSuggestions(prev => ({ ...prev, [idx]: [] }));
    }
  };

  const addSuggestedTech = (idx, tech) => {
    const currentTech = formData.projects[idx].technologies || '';
    const techArray = currentTech.split(',').map(t => t.trim()).filter(Boolean);
    
    if (!techArray.includes(tech)) {
      const newTech = techArray.length > 0 ? `${currentTech}, ${tech}` : tech;
      handleArrayChange(idx, 'technologies', newTech, 'projects');
    }
  };

  return (
    <div className="bg-white rounded-xl shadow-sm border p-6">
      <div className="flex items-center justify-between mb-4">
        <div className="flex items-center gap-2">
          <FileText className="w-5 h-5 text-blue-500" />
          <h2 className="text-xl font-bold">Projects</h2>
        </div>
        <button
          onClick={() => addItem('projects', { name: '', description: '', technologies: '', link: '' })}
          className="px-3 py-1 bg-blue-500 text-white text-sm rounded-lg hover:bg-blue-600"
        >
          + Add
        </button>
      </div>
      {formData.projects.map((proj, idx) => (
        <div key={idx} className="mb-4 p-4 bg-slate-50 rounded-lg">
          <input
            value={proj.name}
            onChange={(e) => handleProjectNameChange(idx, e.target.value)}
            placeholder="Project Name (e.g., YouTube Clone, Steganography Tool)"
            className="w-full mb-3 px-3 py-2 border border-slate-300 rounded-lg text-sm"
          />
          
          {/* Technology Suggestions */}
          {techSuggestions[idx] && techSuggestions[idx].length > 0 && (
            <div className="mb-3 p-3 bg-blue-50 border border-blue-200 rounded-lg">
              <div className="flex items-center gap-2 mb-2">
                <Lightbulb className="w-4 h-4 text-blue-600" />
                <p className="text-xs font-semibold text-blue-900">Suggested Technologies:</p>
              </div>
              <div className="flex flex-wrap gap-2">
                {techSuggestions[idx].map((tech, tidx) => (
                  <button
                    key={tidx}
                    type="button"
                    onClick={() => addSuggestedTech(idx, tech)}
                    className="px-2 py-1 bg-white border border-blue-300 text-blue-700 text-xs rounded hover:bg-blue-100 transition-colors"
                  >
                    + {tech}
                  </button>
                ))}
              </div>
            </div>
          )}
          
          <div className="mb-3">
            <input
              value={proj.technologies}
              onChange={(e) => handleArrayChange(idx, 'technologies', e.target.value, 'projects')}
              placeholder="Technologies Used (comma-separated)"
              className="w-full px-3 py-2 border border-slate-300 rounded-lg text-sm"
            />
            
            {/* Auto-Suggest Technologies Button */}
            {proj.name && !proj.technologies && (
              <button
                type="button"
                onClick={() => autoSuggestTechnologies(idx)}
                className="mt-2 flex items-center gap-2 px-3 py-1.5 bg-gradient-to-r from-cyan-500 to-blue-500 text-white text-xs rounded-lg hover:from-cyan-600 hover:to-blue-600 transition-all shadow-sm"
              >
                <Wand2 className="w-3 h-3" />
                Auto-Suggest Technologies
              </button>
            )}
          </div>
          
          {/* Auto-Generate Description Button */}
          {(proj.name || proj.technologies) && (
            <button
              type="button"
              onClick={() => autoGenerateDescription(idx)}
              className="mb-3 flex items-center gap-2 px-3 py-2 bg-gradient-to-r from-purple-500 to-pink-500 text-white text-sm rounded-lg hover:from-purple-600 hover:to-pink-600 transition-all shadow-sm hover:shadow-md"
            >
              <Wand2 className="w-4 h-4" />
              Auto-Generate Description
            </button>
          )}
          
          <textarea
            value={proj.description}
            onChange={(e) => handleArrayChange(idx, 'description', e.target.value, 'projects')}
            placeholder="Description (or click Auto-Generate above)"
            rows="3"
            className="w-full mb-3 px-3 py-2 border border-slate-300 rounded-lg text-sm"
          />
          
          <input
            value={proj.link}
            onChange={(e) => handleArrayChange(idx, 'link', e.target.value, 'projects')}
            placeholder="Link (optional)"
            className="w-full px-3 py-2 border border-slate-300 rounded-lg text-sm"
          />
          
          {formData.projects.length > 1 && (
            <button
              onClick={() => removeItem(idx, 'projects')}
              className="mt-2 text-red-500 text-sm hover:text-red-700"
            >
              Remove
            </button>
          )}
        </div>
      ))}
    </div>
  );
}